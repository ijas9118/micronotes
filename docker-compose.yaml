services:
  postgres-db:
    container_name: postgres-db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: micronotes
      POSTGRES_PASSWORD: cantremember
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  mongo-db:
    container_name: mongo-db
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network

  # auth-service:
  #   container_name: auth-service
  #   image: auth-service-image
  #   build: ./services/auth-service
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - postgres-db
  #   env_file:
  #     - ./services/auth-service/.env
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 5s
  #   networks:
  #     - app-network

  user-service:
    container_name: user-service
    image: user-service-image
    build: ./services/user-service
    ports:
      - "3002:3002"
    depends_on:
      - mongo-db
    env_file:
      - ./services/user-service/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - app-network

volumes:
  postgres-data:
  mongodb-data:

networks:
  app-network:
    driver: bridge
